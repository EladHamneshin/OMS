version: '3.8'
services:
  pg:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - pg:/var/lib/postgresql/data
      - ./server/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 25s
      retries: 3
  mongo:
    restart: always
    image: mongo:4.2.0
    volumes:
      - data:/data/db
    ports:
     - '27017:27017'
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    volumes: 
      - cache:/data
  express:
    container_name: express-server
    build: ./server 
    depends_on:
      pg:
        condition: service_healthy
      cache:
        condition: service_started
    ports:
      - 4500:4500
    environment:
      # NODE_ENV: production
      PGHOST: pg
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGNAME: postgres
      PGDATABASE: oms
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      JWT_SECRET: 0ebf64db15d5c7e726491f9df6eed630a63f58027dda470e46b1de4ed1a083079c955df979d30d16189a88dd3700e18a1d9e6f0792c959c33c11e177b52b30a9
      EXPRESSPORT: 4500
      MONGO_URI: mongodb://mongo:27017/test
    links:
      - pg
      - cache
      - mongo
    volumes:
      - ./server/src:/app/src
volumes:
  pg:
    driver: local
  cache:
    driver: local 
  mongo:
    driver: local 

